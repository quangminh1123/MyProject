@using SanGiaoDich_BrotherHood.Shared.Models
@using System.Text.Json
@inject HttpClient Http
@inject NavigationManager Navigation
@inject IJSRuntime jsruntime
@page "/vnpay/naptien"
<div class="container-fluid">
    <ul class="breadcrumb">
        <li class="breadcrumb-item"><a href="#"><i class="bi bi-house"></i> Trang chủ</a></li>
        <li class="breadcrumb-item"><a href="#">Nạp tiền vào ví</a></li>
    </ul>
</div>
<div class="container mt-1 mb-5">
    <div class="card shadow-lg">
        <div class="card-header text-center bg-success text-white">
            <i class="bi bi-wallet2 me-2"></i>Nạp tiền vào ví
        </div>
        <div class="card-body">
            <div class="row">
                <!-- Cột trái: Thông tin người dùng -->
                          <div class="col-md-6 user-info">
                    <h5 class="text-success">
                        <i class="bi bi-person-circle me-2"></i>Thông tin tài khoản
                    </h5>
                    @if (isLoading)
                    {
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    }
                    else if (IsLoggedIn && accountInfo != null)
                    {
                        <div class="info-list">
                            <div class="info-item">
                                <strong>Tên tài khoản:</strong> @accountInfo.UserName
                            </div>
                            <div class="info-item">
                                <strong>Họ và tên:</strong> @accountInfo.FullName
                            </div>
                            <div class="info-item">
                                <strong>Số dư hiện tại:</strong> @accountInfo.PreSystem.ToString("N0") VNĐ
                            </div>
                            <div class="info-item">
                                <strong>Trạng thái:</strong>
                                <span class="badge bg-success">Hoạt động</span>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-warning" role="alert">
                            Chưa đăng nhập hoặc không có thông tin tài khoản.
                        </div>
                    }

            </div>


                <!-- Cột phải: Nạp tiền -->
                <div class="col-md-6 payment-section">
                    <form @onsubmit="HandleSubmit">
                        <div class="mb-3">
                            <label class="form-label">Chọn số tiền (VNĐ)</label>
                            <div class="row g-2">
                                 <div class="col-6">
                                    <button type="button" class="btn btn-light w-100 py-3 border" 
                                            @onclick="() => SelectAmount(10000)" 
                                            style="@(OrderInfo.Amount == 10000 ? "background-color: #28a745; color: white;" : "")">
                                        <i class="bi bi-cash-coin me-2"></i>10,000 VND
                                    </button>
                                </div
                                <div class="col-6">
                                    <button type="button" class="btn btn-light w-100 py-3 border" 
                                            @onclick="() => SelectAmount(25000)" 
                                            style="@(OrderInfo.Amount == 25000 ? "background-color: #28a745; color: white;" : "")">
                                        <i class="bi bi-cash-coin me-2"></i>25,000 VND
                                    </button>
                                </div>
                                <div class="col-6">
                                    <button type="button" class="btn btn-light w-100 py-3 border" 
                                            @onclick="() => SelectAmount(50000)" 
                                            style="@(OrderInfo.Amount == 50000 ? "background-color: #28a745; color: white;" : "")">
                                        <i class="bi bi-cash-coin me-2"></i>50,000 VND
                                    </button>
                                </div>
                                <div class="col-6">
                                    <button type="button" class="btn btn-light w-100 py-3 border" 
                                            @onclick="() => SelectAmount(100000)" 
                                            style="@(OrderInfo.Amount == 100000 ? "background-color: #28a745; color: white;" : "")">
                                        <i class="bi bi-cash-coin me-2"></i>100,000 VND
                                    </button>
                                </div>
                                <div class="col-6">
                                    <button type="button" class="btn btn-light w-100 py-3 border" 
                                            @onclick="() => SelectAmount(200000)" 
                                            style="@(OrderInfo.Amount == 200000 ? "background-color: #28a745; color: white;" : "")">
                                        <i class="bi bi-cash-coin me-2"></i>200,000 VND
                                    </button>
                                </div>

                                <div class="col-6">
                                    <button type="button" class="btn btn-light w-100 py-3 border"
                                            @onclick="() => SelectAmount(500000)"
                                            style="@(OrderInfo.Amount == 500000 ? "background-color: #28a745; color: white;" : "")">
                                        <i class="bi bi-cash-coin me-2"></i>500,000 VND
                                    </button>
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="amount" class="form-label">Hoặc nhập số tiền (VNĐ)</label>
                            <input type="number" id="amount" class="form-control" @bind="OrderInfo.Amount" placeholder="Nhập số tiền" required min="25000" step="1000" />
                        </div>
                          <div class="mb-3">
                            <label class="form-label">Chọn loại thanh toán</label>
                            <div class="row g-2">
                                @foreach (var paymentOption in new[] { "VNPay" })
                                {
                                    <div class="col-md-6">
                                        <div class="card payment-option" 
                                             style="@(OrderInfo.PaymentType == paymentOption ? "border-color: #28a745; box-shadow: 0 0 10px rgba(40, 167, 69, 0.5);" : "")"
                                             @onclick="() => SelectPaymentType(paymentOption)">
                                            <div class="card-body text-center">
                                                <img src="/AnhGiaoDien/@paymentOption.ToLower()-logo.png" alt="@paymentOption" class="img-fluid mb-2" style="max-height: 50px;" />
                                                <h6 class="mb-0">@paymentOption</h6>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="description" class="form-label">Mô tả giao dịch</label>
                            <textarea id="description" class="form-control" @bind="OrderIn" rows="3" readonly></textarea>
                        </div>

                        <div class="text-center">
                            <button type="submit" class="btn btn-success btn-lg w-100">
                                <i class="bi bi-arrow-right-circle me-2"></i>Nạp tiền
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
<style>
    .payment-section button:hover {
    transform: scale(1.05);
    transition: 0.2s;
}

.payment-section .btn-light {
    border: none;
    font-size: 16px;
}

.user-info ul {
    list-style: none;
    padding: 0;
}
.user-info {
    background-color: #f9f9f9;
    padding: 20px;
    border-radius: 8px; 
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

.user-info h5 {
    font-size: 1.25rem;
    font-weight: bold;
    margin-bottom: 15px;
}

.info-list {
    padding: 0;
    margin: 0;
    list-style: none;
}

.info-item {
    display: flex;
    justify-content: space-between;
    padding: 10px;
    border-bottom: 1px solid #e0e0e0; 
}

.info-item:last-child {
    border-bottom: none;
}

.info-item strong {
    color: #333;
}

.badge {
    font-size: 0.875rem; 
    padding: 0.4rem 0.6rem;
}

</style>
@code {
    private bool isLoading = true;
    private string errorMessage;
    AccountInfoDto accountInfo;
    private bool IsLoggedIn { get; set; } = false; 
    

    protected override async Task OnInitializedAsync()
    {
        await CheckTokenAndLoadAccountInfo();
    }

    private async Task CheckTokenAndLoadAccountInfo()
    {
        var token = await jsruntime.InvokeAsync<string>("localStorage.getItem", "token");

        if (!string.IsNullOrEmpty(token))
        {
  
            Http.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", token);
            await LoadAccountInfo();
        }
        else
        {
            isLoading = false;
            IsLoggedIn = false;
        }
    }

    private async Task LoadAccountInfo()
    {
        isLoading = true;
        errorMessage = null;

        try
        {
            var response = await Http.GetAsync("api/User/GetMyInfo");

            if (response.IsSuccessStatusCode)
            {
 
                accountInfo = await response.Content.ReadFromJsonAsync<AccountInfoDto>();
                IsLoggedIn = true; 
            }
            else
            {
                
                var errorContent = await response.Content.ReadAsStringAsync();
                errorMessage = $"Lỗi: {response.StatusCode} - {errorContent}";
                IsLoggedIn = false;
                await Logout(); 
            }
        }
        catch (Exception ex)
        {
            errorMessage = "Có lỗi xảy ra khi lấy thông tin tài khoản: " + ex.Message;
            IsLoggedIn = false;
        }
        finally
        {
            isLoading = false;
        }
    }

    private class AccountInfoDto
    {
        public string UserName { get; set; }
        public decimal PreSystem { get; set; }
        public string FullName { get; set; }
        public string PhoneNumber { get; set; }
        public string Gender { get; set; }
        public DateTime? Birthday { get; set; }
        public string ImageAccount { get; set; }
    }
   

    private async Task Logout()
    {
        await jsruntime.InvokeVoidAsync("localStorage.removeItem", "token");
        IsLoggedIn = false;
        accountInfo = null; 
        Navigation.NavigateTo("/", forceLoad: true);
    }
    string OrderIn;

    private PaymentRequestModel OrderInfo = new PaymentRequestModel
{
     UserName = "",
    Amount = 0,     
    PaymentType = "VnPay", 
    OrderDescription = "",
    CreatedDate = DateTime.Now
};
    private void SelectAmount(double amount)
    {
        OrderInfo.Amount = amount;
        UpdateOrderDescription(); 
    }

    private void SelectPaymentType(string type)
    {
        OrderInfo.PaymentType = type;
        
        UpdateOrderDescription(); 
    }

    private void UpdateOrderDescription()
    {
        if (OrderInfo.Amount > 0 && !string.IsNullOrEmpty(OrderInfo.PaymentType))
        {
            OrderIn = $"Thanh toán qua {OrderInfo.PaymentType}, Số tiền: {OrderInfo.Amount:N0} VNĐ.";
            OrderInfo.OrderDescription = $"Thanh toán qua {OrderInfo.PaymentType} với số tiền: {OrderInfo.Amount:N0} VNĐ";
        }
        else
        {
            OrderInfo.OrderDescription = ""; 
        }
    }
    private async Task HandleSubmit()
    {

        if (string.IsNullOrEmpty(OrderInfo.UserName) && accountInfo != null)
        {
            OrderInfo.UserName = accountInfo.UserName; 
        }
        var response = await Http.PostAsJsonAsync("api/payment/CreatePaymentUrl", OrderInfo);

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<JsonElement>();
            string paymentUrl = result.GetProperty("paymentUrl").GetString();
            Navigation.NavigateTo(paymentUrl, true);
        }
        else
        {
            var errorContent = await response.Content.ReadAsStringAsync();
        }
    }

}
