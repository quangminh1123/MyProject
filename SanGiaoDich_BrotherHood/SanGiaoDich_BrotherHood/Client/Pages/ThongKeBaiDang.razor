@page "/Admin/ThongKeBaiDang"
@layout AdminLayout
@using SanGiaoDich_BrotherHood.Shared.Models
@using System.Net.Http.Json
@using System.Collections.Generic

@inject HttpClient Http

@code {
    private List<StatisticDto> statistics = new List<StatisticDto>();
    private string errorMessage;
    private int postsTodayCount = 0;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Lấy dữ liệu thống kê từ API
            var response = await Http.GetFromJsonAsync<List<StatisticDto>>("api/Product/StatisticsByStatus");

            if (response != null)
            {
                statistics = response;
            }
            else
            {
                statistics = new List<StatisticDto>();
            }

            // Sắp xếp danh sách theo trạng thái
            var allStatuses = new List<string> {
                "Tổng số bài đăng",
                "Đã xóa",
                "Đã duyệt",
                "Đã hủy",
                "Đang chờ xác nhận",
            };

            statistics = statistics
                .Where(s => allStatuses.Contains(s.Status)) // Chỉ lấy các trạng thái có trong allStatuses
                .OrderBy(s => allStatuses.IndexOf(s.Status)) // Sắp xếp theo thứ tự trong allStatuses
                .ToList();

            // Đảm bảo danh sách luôn có đúng 5 giá trị
            foreach (var status in allStatuses)
            {
                if (!statistics.Any(s => s.Status == status))
                {
                    statistics.Add(new StatisticDto { Status = status, Count = 0 });
                }
            }

            // Lấy số bài đăng "Đã duyệt" trong ngày
            var approvedPostsTodayResponse = await Http.GetFromJsonAsync<ApprovedPostsTodayResponse>("api/Product/ApprovedPostsToday");
            postsTodayCount = approvedPostsTodayResponse?.Count ?? 0;
        }
        catch (Exception ex)
        {
            errorMessage = $"Đã xảy ra lỗi: {ex.Message}";
        }
    }

    public class StatisticDto
    {
        public string Status { get; set; }
        public int Count { get; set; }
        public DateTime DatePosted { get; set; } // Ngày đăng của bài viết
    }

    public class ApprovedPostsTodayResponse
    {
        public int Count { get; set; }
    }

    private string GetCardColor(string status)
    {
        return status switch
        {
            "Tổng số bài đăng" => "bg-primary text-white",
            "Đã xóa" => "bg-secondary text-white",
            "Đã duyệt" => "bg-success text-white",
            "Đã hủy" => "bg-danger text-white",
            "Đang chờ xác nhận" => "bg-info text-white",
            _ => "bg-light text-dark",
        };
    }

    private string GetIconClass(string status)
    {
        return status switch
        {
            "Tổng số bài đăng" => "fas fa-file-alt",
            "Đã xóa" => "fas fa-trash-alt",
            "Đã duyệt" => "fas fa-check-circle",
            "Đã hủy" => "fas fa-times-circle",
            "Đang chờ xác nhận" => "fas fa-hourglass-half",
            _ => "fas fa-info-circle",
        };
    }

}

<div class="container mt-5">
    <h1 class="text-center mb-4 text-primary">Thống Kê Bài Đăng</h1>

    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
        @if (statistics.Count > 0)
        {
            @foreach (var stat in statistics)
            {
                <div class="col">
                    <div class="card shadow-sm h-100 @GetCardColor(stat.Status)">
                        <div class="card-body d-flex flex-column align-items-center">
                            <div class="icon mb-3">
                                <i class="@GetIconClass(stat.Status) fa-2x"></i>
                            </div>
                            <h5 class="card-title text-center">@stat.Status</h5>
                            <p class="fs-3 fw-bold text-center">@stat.Count</p>
                        </div>
                    </div>
                </div>
            }
        }
        else if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="col-12">
                <div class="alert alert-danger text-center">@errorMessage</div>
            </div>
        }
        else
        {
            <div class="col-12 text-center text-muted">
                <p>Không có dữ liệu để hiển thị.</p>
            </div>
        }
    </div>
</div>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6" style="width: 100%;">
            <div class="card text-center shadow-lg">
                <div class="card-header bg-success text-white">
                    <h3>Số Bài Đăng Trong Ngày</h3>
                </div>
                <div class="card-body">
                    <p class="display-4 fw-bold">@postsTodayCount</p>
                </div>
                <div class="card-footer text-muted">
                    Cập nhật lúc: @DateTime.Now.ToString("HH:mm:ss")
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .card {
        cursor: pointer;
        transition: transform 0.2s ease-in-out;
    }

        .card:hover {
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            transform: translateY(-5px);
            transition: transform 0.2s, box-shadow 0.2s;
        }

    .icon {
        color: #fff;
    }
</style>
