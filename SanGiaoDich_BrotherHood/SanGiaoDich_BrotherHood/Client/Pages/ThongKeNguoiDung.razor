@page "/Admin/ThongKeNguoiDung"
@using BlazorDownloadFile
@using System.Text.Json
@layout AdminLayout
@inject HttpClient Http
@inject IBlazorDownloadFileService DownloadFileService
@inject IJSRuntime JS
<!-- Phần tiêu đề -->
<h3 class="text-center my-4">Thống Kê Người Dùng</h3>

@if (userStatistics == null)
{
    <div class="text-center">
        <div class="spinner-border text-primary" role="status"></div>
        <p class="mt-3">Đang tải dữ liệu...</p>
    </div>
}
else
{
    <div class="container">
        <!-- Cột thống kê tổng quan -->
        <div class="row g-4 my-4">
            <div class="col-md-4">
                <div class="card bg-primary text-white text-center shadow rounded-lg h-100">
                    <div class="card-body">
                        <h5 class="card-title">Tổng Số Người Dùng</h5>
                        <p class="card-text fs-4 fw-bold">@userStatistics["TotalUsers"]</p>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="card bg-success text-white text-center shadow rounded-lg h-100">
                    <div class="card-body">
                        <h5 class="card-title">Người Dùng Hoạt Động</h5>
                        <p class="card-text fs-4 fw-bold">@userStatistics["ActiveUsers"]</p>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="card bg-danger text-white text-center shadow rounded-lg h-100">
                    <div class="card-body">
                        <h5 class="card-title">Người Dùng Ngừng Hoạt Động</h5>
                        <p class="card-text fs-4 fw-bold">@userStatistics["InactiveUsers"]</p>
                    </div>
                </div>
            </div>
        </div>


        <!-- Nút xuất file Excel -->
        <button class="btn btn-success rounded-pill py-2 px-3" @onclick="ExportToExcel">
            <i class="fas fa-file-excel"></i> Xuất Excel
        </button>
    </div>
}

<style>
    .card {
        cursor: pointer;
        transition: transform 0.2s ease-in-out;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        border-radius: 10px;
    }

        .card:hover {
            transform: scale(1.02);
        }

</style>

@code {
    private Dictionary<string, int> userStatistics;

    // Gọi API để lấy dữ liệu thống kê
    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Gọi API để lấy dữ liệu thống kê người dùng
            userStatistics = await Http.GetFromJsonAsync<Dictionary<string, int>>("api/user/UserStatistics");

            // Kiểm tra dữ liệu
            if (userStatistics == null)
            {
                Console.WriteLine("Dữ liệu thống kê người dùng không có.");
            }
            else
            {
                Console.WriteLine($"Dữ liệu thống kê người dùng: {JsonSerializer.Serialize(userStatistics)}");
            }
        }
        catch (Exception ex)
        {
            // Xử lý lỗi khi gọi API
            userStatistics = new Dictionary<string, int>
            {
                { "TotalUsers", 0 },
                { "ActiveUsers", 0 },
                { "InactiveUsers", 0 }
            };
            Console.WriteLine($"Lỗi khi gọi API: {ex.Message}");
        }
    }

    private async Task ExportToExcel()
    {
        var response = await Http.GetAsync("api/user/ExportUserStatisticsExcel");
        if (response.IsSuccessStatusCode)
        {
            var fileBytes = await response.Content.ReadAsByteArrayAsync();
            var fileName = "UserStatistics.xlsx";

            // Sử dụng phương thức đúng với ba tham số
            await DownloadFileService.DownloadFile(fileName, fileBytes, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");

            // Thông báo thành công
            Console.WriteLine("Tải file Excel thành công.");
        }
        else
        {
            // Thông báo lỗi khi tải file
            Console.WriteLine("Lỗi khi tải file Excel");
        }
    }
}
