@page "/ChangeForgottenPass"
@using SanGiaoDich_BrotherHood.Shared.Models
@using SanGiaoDich_BrotherHood.Shared.Dto
@using System.Security.Cryptography
@using System.Text
@inject HttpClient http
@inject IJSRuntime js
@inject NavigationManager navigation

<div class="container">
    <div class="d-flex justify-content-center">
        <div class="card shadow-lg col-md-4">
            @if (errorMessage != null)
            {
                <div class="d-flex justify-content-center m-3">
                    <div class="alert alert-danger">
                        @errorMessage
                    </div>
                </div>
            }
            @if (successMessage != null)
            {
                <div class="d-flex justify-content-center m-3">
                    <div class="alert alert-success">
                        @successMessage
                    </div>
                </div>
            }
            <div class="card-body">
                <h5 class="card-title text-center">Đổi mật khẩu mới</h5>
                <form @onsubmit="SubmitForm">
                    <div class="form-group mt-3">
                        <label class="control-label">Mật khẩu mới</label>
                        <input type="password" class="form-control" @bind="newPass" />
                        @if (!string.IsNullOrEmpty(errorNewPass))
                        {
                            <div class="text-danger">@errorNewPass</div>
                        }
                    </div>
                    <div class="form-group mt-3">
                        <label class="control-label">Nhập lại mật khẩu mới</label>
                        <input type="password" class="form-control" @bind="newPass2" />
                        @if (!string.IsNullOrEmpty(errorNewPass2))
                        {
                            <div class="text-danger">@errorNewPass2</div>
                        }
                    </div>
                    <div class="form-group mt-3">
                        <button class="btn btn-dark btn-block w-100 rounded-pill" type="submit">Xác nhận</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


@code {
    private Account account;
    private List<Account> accounts;
    private string Email;
    private string errorMessage;
    private string successMessage;
    private string newPass;
    private string newPass2;
    private string errorNewPass;
    private string errorNewPass2;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Email = await js.InvokeAsync<string>("localStorage.getItem", "Email");
            accounts = await http.GetFromJsonAsync<List<Account>>("api/User/GetAccounts");
            if (string.IsNullOrEmpty(Email))
            {
                errorMessage = "Vui lòng thực hiện Quên mật khẩu";
                StateHasChanged();
                await Task.Delay(3000);
                navigation.NavigateTo("/login");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Đã xảy ra lỗi: {ex.Message}");
        }
    }

    private async Task SubmitForm()
    {
        if (string.IsNullOrEmpty(newPass))
        {
            errorNewPass = "Vui lòng nhập mật khẩu mới";
            errorNewPass2 = null;
        }
        else if (string.IsNullOrEmpty(newPass2))
        {
            errorNewPass2 = "Vui lòng nhập mật khẩu xác nhận";
            errorNewPass = null;
        }
        else if (newPass != newPass2)
        {
            errorNewPass2 = "Mật khẩu xác nhận không trùng khớp";
            errorNewPass = null;
        }
        else
        {
            account = accounts.FirstOrDefault(x => x.Email == Email);
            var infor = new InfoAccountDto()
                {
                    Password = newPass2
                };
            var response = await http.PutAsJsonAsync($"api/User/ChangePassword/{account.UserName}", infor);
            if (response.IsSuccessStatusCode)
            {
                errorNewPass2 = null;
                errorNewPass = null;
                successMessage = "Đổi mật khẩu thành công";
                await js.InvokeVoidAsync("localStorage.removeItem", "Email");
                StateHasChanged();
                await Task.Delay(2000);
                navigation.NavigateTo("/login");
            }
            else
            {
                var error = await response.Content.ReadAsStringAsync();
                errorNewPass = error;
                errorNewPass2 = null;
            }
        }
    }
}
