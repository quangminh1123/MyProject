@page "/ProductPage"
@using Admin.Services
@using Admin.Model
@inject ProductResponse productrepose
@inject NavigationManager navigation

<h3 class="mb-4">Danh sách sản phẩm</h3>

<div class="d-flex justify-content-end mb-3">
    <button type="button" class="btn btn-primary" @onclick="NavigateToCategoryPage">
        <i class="fas fa-plus"></i> Thêm sản phẩm
    </button>
</div>

@if (productitems == null)
{
    <div class="d-flex justify-content-center">
        <div class="spinner-border text-primary" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
}
else
{
    <table class="table table-hover  text-center">
        <thead class="table-light">
            <tr>
                <th scope="col">Tên</th>
                <th scope="col">Giá</th>
                <th scope="col">Ảnh</th>
                <th scope="col">Trạng thái</th>
                <th scope="col">Nhà cung ứng</th>
                <th scope="col">Loại</th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var x in productitems)
            {
                <tr>
                    <td class="text-truncate" style="max-width: 200px;">@x.Name</td>
                    <td>@x.Price.ToString("N0")đ</td>
                    <td><img src="/@x.Image" class="img-thumbnail" style="width:100px; height:100px;"></td>
                    <td>@x.Status</td>
                    <td>@x.Supplier.Name</td>
                    <td>@x.Category.Name</td>
                    <td>
                        <button type="button" class="btn btn-outline-success btn-sm" @onclick="() =>UpdateProduct(x.IDProduct)">
                            <i class="fas fa-edit"></i> Xem chi tiết
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<style>
    .text-truncate {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }
</style>

@code {
    IEnumerable<Product> productitems;

    protected override async Task OnInitializedAsync()
    {
        productitems = await productrepose.GetProductsWithDetailsAsync();
    }

    private void NavigateToCategoryPage()
    {
        navigation.NavigateTo("/AddProdPage");
    }

    private void UpdateProduct(int productId)
    {
        navigation.NavigateTo($"/UpdateProd/{productId}"); // Điều hướng đến trang cập nhật với ID của sản phẩm
    }
}
