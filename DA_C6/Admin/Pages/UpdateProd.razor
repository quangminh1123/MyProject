@page "/UpdateProd/{id:int}"
@using Admin.Services
@using Admin.Model
@using System.IO
@using Microsoft.AspNetCore.Hosting
@inject ProductResponse Prodrespone
@inject SupplierResponse supplierresponse
@inject CategoryResponse categoryresponse
@inject NavigationManager Navigation
@inject ProductDetailResponse productrepose
@inject ColorResponse colRespone
@inject SizeResponse sizeRespone
@inject ImageResponse imageResponse
@inject IWebHostEnvironment WebHostEnvironment

<h3>Chỉnh sửa sản phẩm</h3>

<div class="container">
    <form @onsubmit="UpdateProduct">
        <div class="table-responsive">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th colspan="2">Thông tin sản phẩm</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><label for="name" class="form-label">Tên sản phẩm</label></td>
                        <td><input type="text" class="form-control" id="name" @bind="product.Name" required /></td>
                    </tr>
                    <tr>
                        <td><label for="price" class="form-label">Giá</label></td>
                        <td><input type="number" class="form-control" id="price" @bind="product.Price" required /></td>
                    </tr>
                    <tr>
                        <td>
                            <InputFile OnChange="HandleFileSelected" />
                        </td>
                        <td><img src="@product.Image" alt="Ảnh sản phẩm" class="img-thumbnail mt-2" style="max-width: 200px;" /></td>
                    </tr>
                    <tr>
                        <td><label for="status" class="form-label">Trạng thái</label></td>
                        <td>
                            <select class="form-control" id="status" @bind="product.Status" required>
                                <option value="">Vui lòng chọn trạng thái sản phẩm</option>
                                <option value="Bán">Bán</option>
                                <option value="Ngừng bán">Ngừng bán</option>
                            </select>
                        </td>
                    </tr>
                    <tr>
                        <td><label for="supplier" class="form-label">Nhà cung ứng</label></td>
                        <td>
                            <select class="form-control" id="supplier" @bind="product.IDSupplier" required>
                                <option value="">Vui lòng chọn nhà cung ứng</option>
                                @if (supplieritems != null)
                                {
                                    @foreach (var sup in supplieritems)
                                    {
                                        <option value="@sup.IDSupplier" selected="@((product.IDSupplier == sup.IDSupplier) ? "selected" : null)">
                                            @sup.Name
                                        </option>
                                    }
                                }
                            </select>
                        </td>
                    </tr>
                    <tr>
                        <td><label for="category" class="form-label">Loại sản phẩm</label></td>
                        <td>
                            <select class="form-control" id="category" @bind="product.IDCategory" required>
                                <option value="">Vui lòng chọn loại sản phẩm</option>
                                @if (categoryitems != null)
                                {
                                    @foreach (var cate in categoryitems)
                                    {
                                        <option value="@cate.IDCategory" selected="@((product.IDCategory == cate.IDCategory) ? "selected" : null)">
                                            @cate.Name
                                        </option>
                                    }
                                }
                            </select>
                        </td>
                    </tr>
                    <tr>
                        <td><label for="productdetails" class="form-label">Chi tiết sản phẩm</label></td>
                        <td>
                            <ul class="list-unstyled">
                                @if (product.ProductDetails != null)
                                {
                                    @foreach (var detail in product.ProductDetails)
                                    {
                                        <li>
                                            <strong>Màu sắc:</strong> @detail.Colors.Color,
                                            <strong>Kích thước:</strong> @detail.Sizes.SizeName,
                                            <strong>Số lượng:</strong> @detail.Quantity
                                            <a class="btn btn-success" href="/UppProductDetails/@detail.IDPDetail">Cập nhật</a>
                                        </li>
                                    }
                                }
                            </ul>
                        </td>
                    </tr>
                    <tr>
                        <td><label class="form-label">Ảnh chi tiết</label></td>
                        <td>
                            @if (imageDetails != null && imageDetails.Any())
                            {
                                @foreach (var x in imageDetails)
                                {
                                    <div>
                                        <img src="@x.Image" alt="Alternate Text" style="width: 100px; height:100px">
                                        <button class="btn btn-danger" @onclick="@(() => DeleteImageDetail(x.IDImage))">Xóa</button>
                                    </div>

                                }
                            }
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>

        <div class="mt-3">
            <button type="submit" class="btn btn-primary">Cập nhật</button>
            <button type="button" class="btn btn-secondary" @onclick="NavigateToProductPage">Quay về danh sách</button>
            <a class="btn btn-success" href="/AddProductDetails/@product.IDProduct">Thêm chi tiết sản phẩm</a>
            <a class="btn btn-primary" href="/AddImage/@product.IDProduct">Thêm ảnh chi tiết</a>
        </div>
    </form>
</div>

@code {
    [Parameter] public int id { get; set; }
    private Product product = new Product();
    private IEnumerable<Supplier> supplieritems;
    private IEnumerable<Category> categoryitems;
    private IEnumerable<ImageDetails> imageDetails;

    protected override async Task OnInitializedAsync()
    {
        product = await Task.Run(() => Prodrespone.GetProductByIdAsync(id));
        supplieritems = await Task.Run(() => supplierresponse.GetSuppliersAsync());
        categoryitems = await Task.Run(() => categoryresponse.GetCategoriesAsync());
        imageDetails = await Task.Run(() => imageResponse.GetImagesAsync(id));

    }

    private async Task UpdateProduct()
    {
        try
        {
            // Gọi phương thức update từ dịch vụ ProductResponse
            await Prodrespone.UpdateAsync(product, id);

            // Chuyển hướng đến trang danh sách sản phẩm
            Navigation.NavigateTo("/ProductPage");
        }
        catch (Exception ex)
        {
            // Xử lý lỗi nếu cần
            Console.WriteLine($"Có lỗi xảy ra: {ex.Message}");
        }
    }

    private async Task DeleteImageDetail(int imageId)
    {
        try
        {
            // Tìm thông tin về ảnh từ danh sách hiện tại
            var imageDetail = imageDetails.FirstOrDefault(img => img.IDImage == imageId);

            if (imageDetail != null)
            {
                // Xóa tệp ảnh khỏi thư mục
                var fileName = Path.GetFileName(imageDetail.Image);
                var filePath = Path.Combine(WebHostEnvironment.WebRootPath, "Image_Product", fileName);
                if (System.IO.File.Exists(filePath))
                {
                    System.IO.File.Delete(filePath);
                }

                // Xóa ảnh khỏi cơ sở dữ liệu
                imageResponse.DeleteImageAsync(imageId);

                Navigation.NavigateTo($"/UpdateProd/{id}");
            }
            else
            {
                Console.WriteLine("Ảnh không tìm thấy.");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Có lỗi xảy ra khi xóa ảnh: {ex.Message}");
        }
    }
    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        var file = e.File;
        if (file != null)
        {
            var fileName = file.Name;
            var filePath = Path.Combine(WebHostEnvironment.WebRootPath, "Image_Product", fileName);

            try
            {
                // Kiểm tra xem tệp đã tồn tại trong thư mục hay chưa
                if (!File.Exists(filePath))
                {
                    // Đọc nội dung tệp và lưu tệp nếu chưa tồn tại
                    using (var stream = file.OpenReadStream())
                    using (var fileStream = new FileStream(filePath, FileMode.Create, FileAccess.Write))
                    {
                        await stream.CopyToAsync(fileStream);
                    }
                }

                // Thiết lập URL ảnh để xem trước
                product.Image = $"Image_Product/{fileName}";
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Có lỗi xảy ra khi lưu tệp: {ex.Message}");
            }
        }
    }

    private void NavigateToProductPage()
    {
        Navigation.NavigateTo("/ProductPage");
    }
}
