@page "/billdetails/{BillId:int}"
@using System.Net.Http.Json
@inject HttpClient HttpClient
<style>

    .pagination-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin-top: 20px;
    }

    .pagination {
        display: flex;
        gap: 10px; /* Khoảng cách giữa các nút */
    }

    .page-button {
        background-color: black;
        color: white;
        border: none;
        padding: 10px 15px;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

        .page-button:disabled {
            background-color: gray;
            cursor: not-allowed;
        }

        .page-button.active {
            background-color: white;
            color: black;
            border: 2px solid black;
            border-radius: 50%; /* Hình vòng tròn */
        }

        .page-button:hover:not(:disabled) {
            background-color: darkgray;
        }

    .content-container {
        width: 100%;
        transition: transform 0.3s ease-out;
    }

        .content-container.transition-out {
            transform: translateX(-100%);
        }

    .breadcrumb {
        list-style: none;
        padding: 0;
        margin: 10px 0;
        font-size: 14px;
    }

        .breadcrumb li {
            display: inline;
        }

            .breadcrumb li::after {
                content: "/";
                padding: 0 5px;
                color: #6c757d; /* Màu xám cho dấu phân cách */
            }

            .breadcrumb li:last-child::after {
                content: "";
            }

        .breadcrumb a {
            color: #007bff; /* Màu xanh dương cho liên kết */
            text-decoration: none;
        }

            .breadcrumb a:hover {
                text-decoration: underline;
            }

        .breadcrumb .active {
            color: #212529;
            font-weight: 500;
            pointer-events: none;
        }

    .nav-tabs .nav-link {
        border-top: none;
        color: black;
        border-bottom: 2px solid transparent;
    }

    .icon-nav {
        width: 15px;
    }

    .input-pro {
        border-width: 1px;
        font-weight: bold;
        padding: 10px;
        border-radius: 10px;
        width: 100%;
        font-size: 15px;
    }

    hr {
        height: 2px;
        border: none;
        background-color: black;
    }

    .input-pro {
        margin-bottom: 20px;
    }

    .font-weight-bolder {
        margin-bottom: 10px;
    }

    .row-custom {
        background-color: #F8F8F8;
        border: none;
        border-radius: 25px;
        padding: 15px;
    }

    .img-container, .status-container, .btn-container {
        display: flex;
        justify-content: center;
        align-items: center;
    }

        .img-container img {
            max-width: 100%;
            height: auto;
        }

        .btn-container .btn {
            margin: 5px;
        }

    .bill-details {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .bill-detail-item {
        border: 1px solid #ccc;
        padding: 1rem;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        display: flex;
        gap: 1rem;
        justify-content: space-between; /* Add this to space items evenly */
    }

    .bill-detail-left {
        flex: 1;
        display: flex;
        justify-content: center;
        align-items: center;
    }

        .bill-detail-left img {
            max-width: 100px;
            border-radius: 4px;
        }

    .bill-detail-center {
        flex: 2;
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
        justify-content: center; /* Center vertically */
    }

    .bill-detail-right {
        flex: 1;
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
        justify-content: center;
        align-items: center;
        text-align: center; 
    }

    .detail-info {
        color: #FF5733; /* Change color to your preference */
        font-weight: bold;
    }

    .bill-detail-item h4 {
        margin: 0;
        font-size: 1.25rem;
        color: #333;
    }

    .bill-detail-item p {
        margin: 0;
        color: #666;
    }

</style>
<div class="container" style="margin-bottom:300px;">
    <div class="profile-header">
        <b class="font-weight-bold h2">THÔNG TIN CÁ NHÂN</b>
        <ul class="breadcrumb">
            <li><a href="/">Trang chủ</a></li>
            <li><a href="pages/profile">Thông tin của bạn</a></li>
            <li>Chi tiết hóa đơn</li>
            <li class="active">@BillId</li>

        </ul>

    </div>
    <div class="row mb-3" >
        @if (billDetails == null)
        {
            <p>Đang tải...</p>
        }
        else if (!billDetails.Any())
        {
            <p>Không tìm thấy chi tiết nào cho hóa đơn này.</p>
        }
        else
        {
            <div class="bill-details">
                @foreach (var detail in billDetails)
                {
                    <div class="bill-detail-item">
                        <div class="bill-detail-left">
                            <img src="@detail.Product.Image" alt="Hình ảnh sản phẩm" />
                        </div>
                        <div class="bill-detail-center">
                            <h4>Sản phẩm: @detail.Product.Name</h4>
                            <p>Màu sắc: @detail.Product.Color</p>
                            <p>Kích cỡ: @detail.Product.Size</p>
                        </div>
                        <div class="bill-detail-right">
                            <p>Số lượng: @detail.Quantity</p>
                            <p>Tổng giá: <n class="text-danger font-weight-bold"> @detail.Price.ToString("N0") VND</n></p>
                        </div>
                    </div>
                }
            </div>
        }


    </div>

</div>



@code {
    [Parameter]
    public int BillId { get; set; }

    private List<BillDetailViewModel> billDetails;

    protected override async Task OnInitializedAsync()
    {
        await LoadBillDetails();
    }

    private async Task LoadBillDetails()
    {
        try
        {
            var response = await HttpClient.GetAsync($"/api/BillDetail/details/{BillId}");
            response.EnsureSuccessStatusCode();

            billDetails = await response.Content.ReadFromJsonAsync<List<BillDetailViewModel>>();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

    public class BillDetailViewModel
    {
        public int IDBDetail { get; set; }
        public int IDBill { get; set; }
        public int IDPDetail { get; set; }
        public int Quantity { get; set; }
        public decimal Price { get; set; }
        public ProductViewModel Product { get; set; }
    }

    public class ProductViewModel
    {
        public int IDProduct { get; set; }
        public string Name { get; set; }
        public string Image { get; set; }
        public string Color { get; set; }
        public string Size { get; set; }
    }
}
